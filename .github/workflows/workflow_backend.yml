on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TAG_NAME: 0.1

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Run tests (skipped)
        run: echo "Skipping tests since none are defined"
  security_scan:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Scan for vulnerabilities with Trivy
        uses : aquasecurity/trivy-action@0.28.0  # Action Trivy officielle
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG_NAME }}  # L'image Docker à scanner
          exit_code: 1        # Code de sortie en cas de vulnérabilité trouvée
          severity: "CRITICAL,HIGH"  # Vulnérabilités critiques et hautes

      - name: Install Snyk
        run: npm install -g snyk

      - name: Authenticate Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Scan dependencies with Snyk
        run: snyk test --severity-threshold=high
        
  build_and_push:
    runs-on: ubuntu-latest
    needs: security_scan 
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository:  ${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}:latest .
          docker tag ghcr.io/${{ github.repository }}:latest ghcr.io/${{ github.repository }}:${{ github.sha }}

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}:${{ github.sha }}

  sign_and_verify:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Install Cosign
        run: |
          curl -LO https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64
          chmod +x cosign-linux-amd64
          sudo mv cosign-linux-amd64 /usr/local/bin/cosign
      - name: Load Cosign Private Key
        run: echo "${{ secrets.COSIGN_PRIVATE_KEY }}" | tr -d '\r' > cosign.key
      - name: Load Cosign Public Key
        run: echo "${{ secrets.COSIGN_PUBLIC_KEY }}" | tr -d '\r' > cosign.pub      
      - name: Authenticate to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin      
      - name: Sign the Docker image with Cosign
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          cosign sign --yes --key cosign.key ghcr.io/${{ github.repository }}:${{ github.sha }}

      - name: Verify the Docker image signature
        run: |
          cosign verify --key cosign.pub ghcr.io/${{ github.repository }}:${{ github.sha }}
