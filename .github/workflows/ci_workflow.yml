name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TAG_NAME: 0.1

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Run tests (skipped)
        run: echo "Skipping tests since none are defined"

  security_scan:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Scan code dependencies with Trivy
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: fs
          severity: CRITICAL,HIGH
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Snyk tests and monitoring
        uses: snyk/actions/node@master
        with:
          command: |
            test --sarif --sarif-file-output=snyk_test_${{ github.sha }}.sarif
            code test --sarif --sarif-file-output=snyk_code_test_${{ github.sha }}.sarif
            monitor
          severity-threshold: high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Upload Snyk SARIF results
        uses: actions/upload-artifact@v4
        with:
           name: snyk-scan-results
           path: |
            snyk_test_${{ github.sha }}.sarif
            snyk_code_test_${{ github.sha }}.sarif

  build_and_push:
    runs-on: ubuntu-latest
    needs: security_scan  # Dépend de la réussite de la vérification de sécurité
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}:latest .
          docker tag ghcr.io/${{ github.repository }}:latest ghcr.io/${{ github.repository }}:${{ github.sha }}

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}:${{ github.sha }}
